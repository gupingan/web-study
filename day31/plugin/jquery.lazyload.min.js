/**
 * jQuery Lazyload Plugin
 * @version 1.0.0
 * @description This plugin is designed to lazy-load images on a webpage, improving page load times and saving bandwidth by only loading images when they are in (or near) the viewport.
 * @author Gu Pingan
 * @copyright (c) 2023 Gu Pingan. All rights reserved.
 * @license MIT
 * @requires jQuery >=1.7.0
 *
 * Usage:
 * // Set options for lazyload
 * $('img.lazy').setLazyloadOptions({ dataSrc: 'data-src', throttleTime: 200 });
 *
 * // Register images for lazyloading
 * $('img.lazy').lazyload();
 *
 * // Note: This plugin automatically listens for scroll events and lazy-loads images as they come into the viewport.
 */
!function(t){var n,o;let e={throttleTime:200},r={dataSrc:"data-src"},a=[];function i(n){let o=n.lazyImgOption().dataSrc,e=n.attr(o);return!!(e&&function n(o){let{top:e,bottom:r,left:a,right:i}=o[0].getBoundingClientRect(),l=t(document).outerHeight(!0),c=t(document).outerWidth(!0);return r>=0&&e<=l&&i>=0&&a<=c}(n))&&(n.attr("src",e).removeAttr(o),!0)}t.lazyloadOption=function(t){if("object"!=typeof t)return e;e={...e,...t}},t.fn.lazyImgOption=function(n){let o=t(this);return"object"!=typeof n?o.data("lazyImgOption"):(n={...r,...n},o.data("lazyImgOption",n),o)},t.fn.lazyload=function(n){let o=t(this);return o.each(function(){var o,e;o=t(this),e=n,o.lazyImgOption(e||{}),"IMG"!==o.prop("tagName")||i(o)||a.push(o)}),o};let l,c=(n=function(){a.forEach(i)},o=e.throttleTime,l=0,function(...t){let e=Date.now();if(e-l>=o)return l=e,n.apply(this,t)});t(document).on("scroll",function(){c()})}(jQuery);