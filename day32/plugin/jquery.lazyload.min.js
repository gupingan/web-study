/**
 * jQuery Lazyload Plugin
 * @version 1.0.0
 * @description This plugin is designed to lazy-load images on a webpage, improving page load times and saving bandwidth by only loading images when they are in (or near) the viewport.
 * @author Gu Pingan
 * @copyright (c) 2023 Gu Pingan. All rights reserved.
 * @license MIT
 * @requires jQuery >=1.7.0
 *
 * Usage:
 * // Set option for lazyload [Optional]
 * $.lazyloadOption({ throttleTime: 200 });
 * $('img').lazyImgOption({ dataSrc: 'img-src' });
 *
 * // Register images for lazyloading
 * $('img').lazyload();
 *
 * // Note: This plugin automatically listens for scroll events and lazy-loads images as they come into the viewport.
 */
!function(t){var a,n;let e,o={throttleTime:200},r={dataSrc:"data-src"},i=(a=a=>{a.forEach(a=>{if(a.isIntersecting){let n=t(a.target),e=n.attr(n.lazyImgOption().dataSrc);n.attr("src",e),l.unobserve(a.target)}})},n=o.throttleTime,e=0,function(...t){let o=Date.now();if(o-e>=n)return e=o,a.apply(this,t)}),l=new IntersectionObserver(i);t.lazyloadOption=function(t){if("object"!=typeof t)return o;o={...o,...t}},t.fn.lazyImgOption=function(a){let n=t(this);return"object"!=typeof a?n.data("lazyImgOption"):(a={...r,...a},n.data("lazyImgOption",a),n)},t.fn.lazyload=function(a){let n=t(this);return n.each(function(){var n,e;n=t(this),e=a,n.lazyImgOption(e||{}),"IMG"===n.prop("tagName")&&l.observe(n[0])}),n}}(jQuery);